 Day 1: Setup + Dataset Collection
Install Python, OpenCV, TensorFlow/Keras, Flask

Download a Kaggle dataset (e.g., "Face Mask Detection Dataset" with masked and unmasked faces)

Organize dataset into train/with_mask, train/without_mask, etc.

Resize and grayscale preprocessing

✅ Day 2: CNN Model Training
Build and train a basic CNN using Keras

Save model weights using .h5 format

Plot training vs validation accuracy/loss for your report

✅ Day 3: Face Detection with OpenCV + Haar Cascades
Use OpenCV to detect faces in live video feed

Test Haar Cascade functionality (ensure faces are being detected reliably)

✅ Day 4: Integrate CNN with Video Stream
Crop detected faces from the video

Feed them into your trained CNN model to predict mask status

Display result on screen with colored boxes and labels ("Mask"/"No Mask")

✅ Day 5: Add Alert Logic
Play beep sound or print console alert if “No Mask” is detected

Optionally: save snapshot/image for logging

✅ Day 6: Flask Deployment (Optional but Recommended)
Wrap the real-time detection into a Flask web app

Show video stream on a browser page

Add a simple home page and detection page

✅ Day 7: Final Touches + Deliverables
Record a short video demo of detection working live

Push code, model, and instructions to GitHub

Write a 2-page report as per the internship guidelines:

Introduction

Abstract

Tools Used

Steps Involved

Conclusion